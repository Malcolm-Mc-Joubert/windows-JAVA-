/*
 * MDIADBO
 * LA MDI
 */
package adboswing.boudaries;

import adboswing.entities.Connexion;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDesktopPane;
import javax.swing.JInternalFrame;

/**
 *
 * @author pascal
 */
public class MDIADBO extends javax.swing.JFrame {

    /**
     * Creates new form MDIADBO
     */
    public MDIADBO() throws SQLException {
        initComponents();
        Connexion.seConnecter("journal2014", "p", "b");

        setLocationRelativeTo(null);
        setVisible(true);
//        // sert a ouvrir automatiquement la fenetre statut
//
//        JInternalFrame JfStatut = null;
//        try {
//            JfStatut = new NewJInternaStatut();
//        } catch (SQLException ex) {
//            Logger.getLogger(MDIADBO.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        JfStatut.setVisible(true);
//        this.desktopPane.add(JfStatut);
//
//        // pour ouvrir automatiquement le jFrame rubrique
//        JInternalFrame JfRubriquev = null;
//        JInternalFrame JfRubrique = new InternalRubrique();
//        JfRubrique.setVisible(true);
//        this.desktopPane.add(JfRubrique);
//        
//        // pour ouvrir automatiquement le jFrame Mot-cle
//        JInternalFrame JfMotCle = null;
//    JfMotCle = new InternalFrameMotCle();
//        JfMotCle.setVisible(true);
//        this.desktopPane.add(JfMotCle);  
 // pour ouvrir automatiquement le jFrame supr
          JInternalFrame JfSupArticle = null;
    JfSupArticle = new ArticleSupJInternalFrame();
        JfSupArticle.setVisible(true);
        this.desktopPane.add(JfSupArticle);  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desktopPane = new javax.swing.JDesktopPane();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        statutMenuItem = new javax.swing.JMenuItem();
        journalisteMenuItem = new javax.swing.JMenuItem();
        rubriqueMenuItem = new javax.swing.JMenuItem();
        MotCleMenuItem = new javax.swing.JMenuItem();
        jMenuItemSuppr = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        fenetreMenu = new javax.swing.JMenu();
        cascadeMenuItem = new javax.swing.JMenuItem();
        horizontaleMenuItem = new javax.swing.JMenuItem();
        verticaleMenuItem = new javax.swing.JMenuItem();
        fermerMenuItem = new javax.swing.JMenuItem();
        fermerToutMenuItem = new javax.swing.JMenuItem();
        aideMenu = new javax.swing.JMenu();
        contenuMenuItem = new javax.swing.JMenuItem();
        aProposMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        fileMenu.setMnemonic('f');
        fileMenu.setText("Fichier");

        statutMenuItem.setMnemonic('s');
        statutMenuItem.setText("Statut");
        statutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statutMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(statutMenuItem);

        journalisteMenuItem.setMnemonic('j');
        journalisteMenuItem.setText("Journaliste");
        fileMenu.add(journalisteMenuItem);

        rubriqueMenuItem.setMnemonic('r');
        rubriqueMenuItem.setText("Rubrique");
        rubriqueMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rubriqueMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(rubriqueMenuItem);

        MotCleMenuItem.setText("Mot-Clé");
        MotCleMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MotCleMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(MotCleMenuItem);

        jMenuItemSuppr.setText("Suppr-Article");
        jMenuItemSuppr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSupprActionPerformed(evt);
            }
        });
        fileMenu.add(jMenuItemSuppr);

        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        fenetreMenu.setMnemonic('e');
        fenetreMenu.setText("Fenêtre");

        cascadeMenuItem.setMnemonic('c');
        cascadeMenuItem.setText("Cascade");
        cascadeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cascadeMenuItemActionPerformed(evt);
            }
        });
        fenetreMenu.add(cascadeMenuItem);

        horizontaleMenuItem.setMnemonic('h');
        horizontaleMenuItem.setText("Horizontale");
        horizontaleMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                horizontaleMenuItemActionPerformed(evt);
            }
        });
        fenetreMenu.add(horizontaleMenuItem);

        verticaleMenuItem.setMnemonic('v');
        verticaleMenuItem.setText("Verticale");
        verticaleMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verticaleMenuItemActionPerformed(evt);
            }
        });
        fenetreMenu.add(verticaleMenuItem);

        fermerMenuItem.setMnemonic('f');
        fermerMenuItem.setText("Fermer");
        fermerMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fermerMenuItemActionPerformed(evt);
            }
        });
        fenetreMenu.add(fermerMenuItem);

        fermerToutMenuItem.setMnemonic('t');
        fermerToutMenuItem.setText("Fermer tout");
        fermerToutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fermerToutMenuItemActionPerformed(evt);
            }
        });
        fenetreMenu.add(fermerToutMenuItem);

        menuBar.add(fenetreMenu);

        aideMenu.setMnemonic('a');
        aideMenu.setText("Aide");

        contenuMenuItem.setMnemonic('c');
        contenuMenuItem.setText("Contenu");
        aideMenu.add(contenuMenuItem);

        aProposMenuItem.setMnemonic('a');
        aProposMenuItem.setText("A propos");
        aideMenu.add(aProposMenuItem);

        menuBar.add(aideMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(desktopPane, javax.swing.GroupLayout.PREFERRED_SIZE, 983, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(desktopPane, javax.swing.GroupLayout.PREFERRED_SIZE, 612, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void statutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statutMenuItemActionPerformed
        // Affiche la JInternalFrame
        JInternalFrame JfStatut = null;
        try {
            JfStatut = new NewJInternaStatut();
        } catch (SQLException ex) {
            Logger.getLogger(MDIADBO.class.getName()).log(Level.SEVERE, null, ex);
        }
        JfStatut.setVisible(true);
        this.desktopPane.add(JfStatut);
    }//GEN-LAST:event_statutMenuItemActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // Deconnexion BD
        Connexion.seDeconnecter();
    }//GEN-LAST:event_formWindowClosing

    private void rubriqueMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rubriqueMenuItemActionPerformed
        // Affiche la JInternalFrame
        JInternalFrame JfRubrique = null;
        try {
            JfRubrique = new InternalRubrique();
        } catch (SQLException ex) {
            Logger.getLogger(MDIADBO.class.getName()).log(Level.SEVERE, null, ex);
        }
        JfRubrique.setVisible(true);
        this.desktopPane.add(JfRubrique);
    }//GEN-LAST:event_rubriqueMenuItemActionPerformed

    private void cascadeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cascadeMenuItemActionPerformed
        // 
        JDesktopPane jdpBureau = this.desktopPane;

        JInternalFrame[] tFrames = jdpBureau.getAllFrames();
        try {
            int lx = 0, ly = 0;

            for (int i = tFrames.length - 1; i >= 0; i--) {
                // Arbitrairement a 500 sur 300
                tFrames[i].setBounds(lx, ly, 500, 300);
                lx += 30;
                ly += 30;
            }

        } catch (Exception e) {
        }
    }//GEN-LAST:event_cascadeMenuItemActionPerformed

    private void horizontaleMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_horizontaleMenuItemActionPerformed
        // 
        JDesktopPane jdpBureau = this.desktopPane;

        JInternalFrame[] tFrames = jdpBureau.getAllFrames();

        try {
            int ly = 0;

            int liLargeurBureau = jdpBureau.getWidth();
            int liHauteurBureau = jdpBureau.getHeight();
            int liHauteur = liHauteurBureau / tFrames.length;

            for (int i = tFrames.length - 1; i >= 0; i--) {
                tFrames[i].setBounds(0, ly, liLargeurBureau, liHauteur);
                ly += liHauteur;
            }

        } catch (Exception e) {
        }
    }//GEN-LAST:event_horizontaleMenuItemActionPerformed

    private void verticaleMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verticaleMenuItemActionPerformed
        // 
        JDesktopPane jdpBureau = this.desktopPane;

        JInternalFrame[] tFrames = jdpBureau.getAllFrames();
        try {
            int lx = 0;

            int liLargeurBureau = jdpBureau.getWidth();
            int liHauteurBureau = jdpBureau.getHeight();
            int liLargeur = liLargeurBureau / tFrames.length;

            for (int i = tFrames.length - 1; i >= 0; i--) {
                tFrames[i].setBounds(lx, 0, liLargeur, liHauteurBureau);
                lx += liLargeur;
            }

        } catch (Exception e) {
        }
    }//GEN-LAST:event_verticaleMenuItemActionPerformed

    private void fermerMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fermerMenuItemActionPerformed
        // 
        JDesktopPane jdpBureau = this.desktopPane;
        JInternalFrame[] tFrames = jdpBureau.getAllFrames();
        try {
            if (tFrames.length > 0) {
                tFrames[0].setClosed(true);
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_fermerMenuItemActionPerformed

    private void fermerToutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fermerToutMenuItemActionPerformed
        // 
        JDesktopPane jdpBureau = this.desktopPane;

        JInternalFrame[] tFrames = jdpBureau.getAllFrames();
        try {
            for (int i = 0; i < tFrames.length; ++i) {
                tFrames[i].setClosed(true);
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_fermerToutMenuItemActionPerformed

    private void MotCleMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MotCleMenuItemActionPerformed
        // TODO add your handling code here:
    JInternalFrame JfMotCle = null;
    JfMotCle = new InternalFrameMotCle();
        JfMotCle.setVisible(true);
        this.desktopPane.add(JfMotCle);  
    }//GEN-LAST:event_MotCleMenuItemActionPerformed

    private void jMenuItemSupprActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSupprActionPerformed
        // TODO add your handling code here:
        JInternalFrame JfSupArticle = null;
    JfSupArticle = new ArticleSupJInternalFrame();
        JfSupArticle.setVisible(true);
        this.desktopPane.add(JfSupArticle);  
    }//GEN-LAST:event_jMenuItemSupprActionPerformed

    /**
     *
     * @param jif
     */
    private void ouvrirFenetre(JInternalFrame jif) {
        // La met au premier plan en plein ecran
        //StatutJInternalFrame jif = new StatutJInternalFrame();
        // Plutot mettre le setVisible(true) sur le constructeur de la JIF
        //jif.setVisible(true); 
        this.desktopPane.add(jif);
        try {
//            jif.setMaximum(true);
            jif.setSelected(true);
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MDIADBO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MDIADBO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MDIADBO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MDIADBO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new MDIADBO().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(MDIADBO.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem MotCleMenuItem;
    private javax.swing.JMenuItem aProposMenuItem;
    private javax.swing.JMenu aideMenu;
    private javax.swing.JMenuItem cascadeMenuItem;
    private javax.swing.JMenuItem contenuMenuItem;
    private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fenetreMenu;
    private javax.swing.JMenuItem fermerMenuItem;
    private javax.swing.JMenuItem fermerToutMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenuItem horizontaleMenuItem;
    private javax.swing.JMenuItem jMenuItemSuppr;
    private javax.swing.JMenuItem journalisteMenuItem;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem rubriqueMenuItem;
    private javax.swing.JMenuItem statutMenuItem;
    private javax.swing.JMenuItem verticaleMenuItem;
    // End of variables declaration//GEN-END:variables

}
